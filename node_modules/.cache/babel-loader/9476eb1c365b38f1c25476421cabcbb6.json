{"ast":null,"code":"function ___$insertStyle(css) {\n  if (!css || typeof window === 'undefined') {\n    return;\n  }\n\n  const style = document.createElement('style');\n  style.setAttribute('type', 'text/css');\n  style.innerHTML = css;\n  document.head.appendChild(style);\n  return css;\n}\n\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\n\n___$insertStyle(\"@keyframes blink {\\n  50% {\\n    opacity: 1;\\n  }\\n}\");\n\nvar Typer = function (_a) {\n  var sentences = _a.sentences,\n      _b = _a.startDelay,\n      startDelay = _b === void 0 ? 0 : _b,\n      _c = _a.cursorDelay,\n      cursorDelay = _c === void 0 ? startDelay : _c,\n      _d = _a.className,\n      className = _d === void 0 ? '' : _d,\n      _e = _a.cursorClassName,\n      cursorClassName = _e === void 0 ? '' : _e,\n      _f = _a.cursorColor,\n      cursorColor = _f === void 0 ? '' : _f,\n      _g = _a.cursorBlinkSpeed,\n      cursorBlinkSpeed = _g === void 0 ? 700 : _g,\n      _h = _a.showCursor,\n      showCursor = _h === void 0 ? true : _h,\n      _j = _a.hideCursorOnFinish,\n      hideCursorOnFinish = _j === void 0 ? false : _j,\n      _k = _a.cursorSmooth,\n      cursorSmooth = _k === void 0 ? false : _k,\n      _l = _a.typingSpeed,\n      typingSpeed = _l === void 0 ? 80 : _l,\n      _m = _a.deletingSpeed,\n      deletingSpeed = _m === void 0 ? 30 : _m,\n      _o = _a.pauseTime,\n      pauseTime = _o === void 0 ? 1000 : _o,\n      _p = _a.loop,\n      loop = _p === void 0 ? true : _p,\n      _q = _a.style,\n      style = _q === void 0 ? {} : _q,\n      _r = _a.defaultText,\n      defaultText = _r === void 0 ? '' : _r;\n\n  var _s = useState(defaultText),\n      text = _s[0],\n      setText = _s[1];\n\n  var _t = useState(false),\n      isDeleting = _t[0],\n      setIsDeleting = _t[1];\n\n  var _u = useState(0),\n      loopNum = _u[0],\n      setLoopNum = _u[1];\n\n  var _v = useState(typingSpeed),\n      writingSpeed = _v[0],\n      setWritingSpeed = _v[1];\n\n  var mountedRef = useRef(false);\n  var refText = useRef(text);\n  var refIsDeleting = useRef(isDeleting);\n  var refLoopNum = useRef(loopNum);\n  var refWritingSpeed = useRef(writingSpeed);\n  var refTimer = useRef(0);\n  var timer1 = useRef(0);\n  var timer2 = useRef(0);\n  var timer3 = useRef(0);\n  var refIsGoingToDelete = useRef(false);\n  var refIsFinished = useRef(false);\n  clearTimeout(refTimer.current);\n  refText.current = text;\n  refIsDeleting.current = isDeleting;\n  refLoopNum.current = loopNum;\n  refWritingSpeed.current = writingSpeed;\n  useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n      clearTimeout(refTimer.current);\n      clearTimeout(timer1.current);\n      clearTimeout(timer2.current);\n      clearTimeout(timer3.current);\n    };\n  }, []);\n  var handleType = useCallback(function () {\n    var i = refLoopNum.current % sentences.length;\n    var fullText = sentences[i];\n    setText(refIsDeleting.current ? fullText.substring(0, refText.current.length - 1) : fullText.substring(0, refText.current.length + 1));\n\n    if (!refIsDeleting.current && refText.current === fullText && !refIsGoingToDelete.current) {\n      refIsGoingToDelete.current = true;\n      timer1.current = window.setTimeout(function () {\n        setIsDeleting(true);\n        setWritingSpeed(deletingSpeed);\n        refIsGoingToDelete.current = false;\n      }, pauseTime);\n    } else if (refIsDeleting.current && refText.current === '') {\n      setIsDeleting(false);\n      setWritingSpeed(typingSpeed);\n      setLoopNum(refLoopNum.current + 1);\n    }\n\n    if (loop || i !== sentences.length - 1 || refText.current.length !== fullText.length) {\n      if (refIsGoingToDelete.current) {\n        timer2.current = window.setTimeout(function () {\n          refTimer.current = window.setTimeout(handleType, refWritingSpeed.current);\n        }, pauseTime);\n      } else {\n        refTimer.current = window.setTimeout(handleType, refWritingSpeed.current);\n      }\n    } else {\n      refIsFinished.current = true;\n    }\n  }, [deletingSpeed, loop, pauseTime, typingSpeed, sentences]);\n  useEffect(function () {\n    timer3.current = window.setTimeout(function () {\n      if (!mountedRef.current) {\n        return;\n      }\n\n      handleType();\n    }, startDelay);\n  }, [handleType, startDelay]);\n  var styledSpan = useMemo(function () {\n    return {\n      opacity: 0,\n      visibility: showCursor ? 'visible' : 'hidden',\n      color: cursorColor,\n      animation: \"blink \".concat(cursorBlinkSpeed, \"ms \").concat(cursorSmooth ? '' : 'steps(1)', \" infinite\"),\n      animationDelay: \"\".concat(cursorDelay, \"ms\")\n    };\n  }, [cursorBlinkSpeed, cursorColor, cursorDelay, cursorSmooth, showCursor]);\n  return React.createElement(\"span\", {\n    style: style\n  }, React.createElement(\"span\", {\n    className: className\n  }, text), !(refIsFinished.current && hideCursorOnFinish) && React.createElement(\"span\", {\n    className: \"typist-cursor \".concat(\"\".concat(cursorClassName, \" \").concat(className)),\n    style: styledSpan\n  }, \"|\"));\n};\n\nexport default Typer;","map":{"version":3,"mappings":"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","names":["Typer","_a","sentences","_b","startDelay","_c","cursorDelay","_d","className","_e","cursorClassName","_f","cursorColor","_g","cursorBlinkSpeed","_h","showCursor","_j","hideCursorOnFinish","_k","cursorSmooth","_l","typingSpeed","_m","deletingSpeed","_o","pauseTime","_p","loop","_q","style","_r","defaultText","useState","text","setText","isDeleting","setIsDeleting","loopNum","setLoopNum","writingSpeed","setWritingSpeed","mountedRef","useRef","refText","refIsDeleting","refLoopNum","refWritingSpeed","refTimer","timer1","timer2","timer3","refIsGoingToDelete","refIsFinished","clearTimeout","current","useEffect","handleType","useCallback","i","length","fullText","substring","window","setTimeout","styledSpan","useMemo","opacity","visibility","color","animation","concat","animationDelay","React"],"sources":["/Users/development/Desktop/portfolio react/portfolio/node_modules/react-text-typist/src/index.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback, useMemo } from 'react';\n// import PropTypes from 'prop-types';\n\nimport './styles.scss';\n\ninterface TyperProps {\n  sentences: string[];\n  startDelay?: number;\n  cursorDelay?: number;\n  className?: string;\n  cursorClassName?: string;\n  cursorColor?: string;\n  cursorBlinkSpeed?: number;\n  showCursor?: boolean;\n  hideCursorOnFinish?: boolean;\n  cursorSmooth?: boolean;\n  typingSpeed?: number;\n  deletingSpeed?: number;\n  pauseTime?: number;\n  loop?: boolean;\n  style?: React.CSSProperties;\n  defaultText?: string;\n}\n\nconst Typer: React.FC<TyperProps> = ({\n  sentences,\n  startDelay = 0,\n  cursorDelay = startDelay,\n  className = '',\n  cursorClassName = '',\n  cursorColor = '',\n  cursorBlinkSpeed = 700,\n  showCursor = true,\n  hideCursorOnFinish = false,\n  cursorSmooth = false,\n  typingSpeed = 80,\n  deletingSpeed = 30,\n  pauseTime = 1000,\n  loop = true,\n  style = {},\n  defaultText = '',\n}: TyperProps) => {\n  const [text, setText] = useState(defaultText);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [loopNum, setLoopNum] = useState(0);\n  const [writingSpeed, setWritingSpeed] = useState(typingSpeed);\n  const mountedRef = useRef(false);\n\n  const refText = useRef(text);\n  const refIsDeleting = useRef(isDeleting);\n  const refLoopNum = useRef(loopNum);\n  const refWritingSpeed = useRef(writingSpeed);\n\n  const refTimer = useRef(0);\n  const timer1 = useRef(0);\n  const timer2 = useRef(0);\n  const timer3 = useRef(0);\n  const refIsGoingToDelete = useRef(false);\n  const refIsFinished = useRef(false);\n\n  clearTimeout(refTimer.current);\n\n  refText.current = text;\n  refIsDeleting.current = isDeleting;\n  refLoopNum.current = loopNum;\n  refWritingSpeed.current = writingSpeed;\n\n  useEffect(() => {\n    mountedRef.current = true;\n\n    return () => {\n      mountedRef.current = false;\n      clearTimeout(refTimer.current);\n      clearTimeout(timer1.current);\n      clearTimeout(timer2.current);\n      clearTimeout(timer3.current);\n    };\n  }, []);\n\n  const handleType = useCallback(() => {\n    const i = refLoopNum.current % sentences.length;\n    const fullText = sentences[i];\n\n    setText(\n      refIsDeleting.current\n        ? fullText.substring(0, refText.current.length - 1)\n        : fullText.substring(0, refText.current.length + 1)\n    );\n\n    if (!refIsDeleting.current && refText.current === fullText && !refIsGoingToDelete.current) {\n      refIsGoingToDelete.current = true;\n      timer1.current = window.setTimeout(() => {\n        setIsDeleting(true);\n        setWritingSpeed(deletingSpeed);\n        refIsGoingToDelete.current = false;\n      }, pauseTime);\n    } else if (refIsDeleting.current && refText.current === '') {\n      setIsDeleting(false);\n      setWritingSpeed(typingSpeed);\n      setLoopNum(refLoopNum.current + 1);\n    }\n\n    if (loop || i !== sentences.length - 1 || refText.current.length !== fullText.length) {\n      if (refIsGoingToDelete.current) {\n        timer2.current = window.setTimeout(() => {\n          refTimer.current = window.setTimeout(handleType, refWritingSpeed.current);\n        }, pauseTime);\n      } else {\n        refTimer.current = window.setTimeout(handleType, refWritingSpeed.current);\n      }\n    } else {\n      refIsFinished.current = true;\n    }\n  }, [deletingSpeed, loop, pauseTime, typingSpeed, sentences]);\n\n  useEffect(() => {\n    timer3.current = window.setTimeout(() => {\n      if (!mountedRef.current) {\n        return;\n      }\n      handleType();\n    }, startDelay);\n  }, [handleType, startDelay]);\n\n  const styledSpan = useMemo(\n    () => ({\n        opacity: 0,\n        visibility: showCursor ? 'visible' : 'hidden',\n        color: cursorColor,\n        animation: `blink ${cursorBlinkSpeed}ms ${cursorSmooth ? '' : 'steps(1)'} infinite`,\n        animationDelay: `${cursorDelay}ms`,\n      } as React.CSSProperties),\n      [cursorBlinkSpeed, cursorColor, cursorDelay, cursorSmooth, showCursor]\n  );\n\n  return (\n    <span style={style}>\n      <span className={className}>{text}</span>\n      {!(refIsFinished.current && hideCursorOnFinish) && (\n        <span\n          className={`typist-cursor ${`${cursorClassName} ${className}`}`}\n          style={styledSpan}\n        >\n          |\n        </span>\n      )}\n    </span>\n  );\n};\n\n/* Typer.propTypes = {\n  className: PropTypes.string, // so it is compatible with styled-components\n  cursorColor: PropTypes.string,\n  sentences: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  showCursor: PropTypes.bool,\n  typingSpeed: PropTypes.number,\n  deleteSpeed: PropTypes.number,\n  pauseTime: PropTypes.number,\n  loop: PropTypes.bool,\n};\n\nTyper.defaultProps = {\n  className: '',\n  cursorColor: '#000000',\n  showCursor: true,\n  typingSpeed: 80,\n  deleteSpeed: 30,\n  pauseTime: 2000,\n  loop: true,\n}; */\n\nexport default Typer;\n"]},"metadata":{},"sourceType":"module"}